---
import image from './utils/image'
import link from './utils/link'
import responsive from './utils/responsive'

const { blok } = Astro.props
const classList = [blok.component, blok.style].join(' ')

const inline = [
	`--list: var(--${blok.color || 'primary'});`,
	`--on-list: var(--on-${blok.color || 'primary'});`,
	blok.responsive ? responsive(blok) : '',
].join(' ')
---

<ul
	class={classList}
	data-blok-c={blok.c}
	data-blok-uid={blok.uid}
	style={inline}
>
	{
		blok.content.map((item) => {
			const El = item.link ? 'a' : 'span'
			const avatar = item?.avatar?.filename ? image(item?.avatar, 40, 40) : ''
			const icon = item?.icon?.icon
			return (
				<li>
					<El class="List_item" href={link(item.link)}>
						{avatar && !icon && <img class="List_item_avatar" src={avatar} />}
						{!avatar && icon && <span class="List_item_icon" set:html={icon} />}
						<span class="List_item_text">
							<span class="List_item_text_primary">{item.text}</span>
							<span class="List_item_text_secondary">
								{item.secondary_text}
							</span>
						</span>
					</El>
				</li>
			)
		})
	}
</ul>

<style lang="scss" is:global>
	.List {
		list-style: none;
		margin: 0;
		padding: 8px 0;

		&_item {
			align-items: center;
			color: inherit;
			display: flex;
			gap: 16px;
			padding: 12px 16px;
			text-decoration: none;

			&_avatar {
				border-radius: 50%;
				display: block;
			}

			&_icon {
				align-items: center;
				background: var(--list);
				border-radius: 50%;
				display: flex;
				height: 40px;
				justify-content: center;
				width: 40px;

				svg {
					display: block;
					height: 24px;
					fill: var(--on-list);
					width: 24px;
				}
			}

			&_text {
				&_primary {
					display: block;
					letter-spacing: 0.15px;
					line-height: 24px;
				}

				&_secondary {
					display: block;
					font-size: 14px;
					letter-spacing: 0.25px;
					line-height: normal;
					opacity: 0.6;
				}
			}

			a {
				position: relative;

				/* background pseudo element */
				&:before {
					background: var(--list);
					content: '';
					opacity: 0;
					pointer-events: none;
					position: absolute;
					top: 0;
					right: 0;
					bottom: 0;
					left: 0;
				}

				&:hover:before {
					opacity: var(--hover-opacity);
				}

				&:active:before {
					opacity: var(--active-opacity);
				}
			}
		}
	}
</style>
