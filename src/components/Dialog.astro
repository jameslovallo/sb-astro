---
import Slot from './Slot.astro'
import responsive from './utils/responsive'

const { blok } = Astro.props
const classList = [blok.component, blok.style].join(' ')
---

<div
	class={classList}
	data-blok-c={blok.c}
	data-blok-uid={blok.uid}
	style={responsive(blok)}
>
	<button class="Dialog_open">
		<Slot bloks={blok.trigger} />
	</button>
	<dialog>
		<h2>{blok.heading}</h2>
		<div class="Dialog_content">
			<Slot bloks={blok.content} />
		</div>
		<div class="Dialog_footer">
			<Slot bloks={blok.secondary_action} />
			<button class="Dialog_close" style="--button: var(--primary);">
				<span class="Button">
					<span class="text">
						{blok.close_button_text}
					</span>
				</span>
			</button>
		</div>
	</dialog>
</div>

<script>
	import { lock, unlock } from 'tua-body-scroll-lock'

	document.querySelectorAll('.Dialog').forEach((el) => {
		const dialog = el.querySelector('dialog')
		const open = el.querySelector('.Dialog_open')
		const close = el.querySelector('.Dialog_close')

		open.addEventListener('click', () => {
			dialog.showModal()
			lock(dialog)
		})

		close.addEventListener('click', () => {
			dialog.classList.add('out')
			setTimeout(() => {
				dialog.close()
				dialog.classList.remove('out')
				unlock(dialog)
			}, 300)
		})
	})
</script>

<style lang="scss" is:global>
	.Dialog {
		button {
			background: none;
			border: none;
			display: block;
			padding: 0;
		}
		.Dialog_open {
			cursor: pointer;
			width: 100%;
		}
		dialog {
			animation: fadeInUp 0.33s;
			background: var(--surface);
			border-radius: 4px;
			border: 1px solid rgb(204, 204, 204);
			box-shadow: rgb(0 0 0 / 20%) 0px 11px 15px -7px,
				rgb(0 0 0 / 14%) 0px 24px 38px 3px, rgb(0 0 0 / 12%) 0px 9px 46px 8px;
			color: var(--on-surface);
			height: max-content;
			max-height: 80vh;
			max-width: 560px;
			outline: none;
			overflow: auto;
			padding: 0px;
			position: fixed;
			width: 90vw;

			&.out {
				animation: fadeOutDown 0.33s;
			}

			h2 {
				font-size: 20px;
				line-height: 2;
				margin: 0;
				padding: 16px 20px;
			}
		}

		&_content {
			border-top: 1px solid var(--surface-border);
			overflow-y: auto;
			padding: 0 20px 24px;
		}

		&_footer {
			background: var(--surface);
			border-top: 1px solid var(--surface-border);
			bottom: 0;
			display: flex;
			justify-content: flex-end;
			padding: 8px;
			position: sticky;
		}

		@keyframes fadeInUp {
			from {
				opacity: 0;
				transform: translate3d(0, 100%, 0);
			}

			to {
				opacity: 1;
				transform: translate3d(0, 0, 0);
			}
		}

		@keyframes fadeOutDown {
			from {
				opacity: 1;
			}

			to {
				opacity: 0;
				transform: translate3d(0, 100%, 0);
			}
		}
	}
</style>
